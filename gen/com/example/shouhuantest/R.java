/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.example.shouhuantest;

public final class R {
    public static final class anim {
        public static final int ble_anim=0x7f040000;
        public static final int blue_handle_down=0x7f040001;
        public static final int blue_handle_up=0x7f040002;
        public static final int leftin=0x7f040003;
        public static final int leftout=0x7f040004;
        public static final int rightin=0x7f040005;
        public static final int rightout=0x7f040006;
    }
    public static final class attr {
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowSingleTap=0x7f010005;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animateOnClick=0x7f010006;
        /**  Defines panel animation duration in ms. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animationDuration=0x7f010007;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int bottomOffset=0x7f010003;
        /**  Defines closed handle (drawable/color). 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int closedHandle=0x7f01000e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int content=0x7f010002;
        /**  Identifier for the child that represents the panel's content. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int content1=0x7f01000a;
        /**  Defines opened handle (drawable). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int decreaseButton=0x7f010014;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>rightToLeft</code></td><td>0</td><td></td></tr>
<tr><td><code>bottomToTop</code></td><td>1</td><td></td></tr>
<tr><td><code>leftToRight</code></td><td>2</td><td></td></tr>
<tr><td><code>topToBottom</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int direction=0x7f010000;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int handle=0x7f010001;
        /**  Identifier for the child that represents the panel's handle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int handle1=0x7f010009;
        /**  Defines switcher idle timeout in ms. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int idleTimeout=0x7f010013;
        /**  Defines opened handle (drawable). 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int increaseButton=0x7f010015;
        /**  Defines if flying gesture forces linear interpolator in animation. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int linearFlying=0x7f01000b;
        /**  Defines opened handle (drawable/color). 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int openedHandle=0x7f01000d;
        /**  Defines panel position on the screen. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0</td><td> Panel placed at top of the screen. </td></tr>
<tr><td><code>bottom</code></td><td>1</td><td> Panel placed at bottom of the screen. </td></tr>
<tr><td><code>left</code></td><td>2</td><td> Panel placed at left of the screen. </td></tr>
<tr><td><code>right</code></td><td>3</td><td> Panel placed at right of the screen. </td></tr>
</table>
         */
        public static final int position=0x7f010008;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int topOffset=0x7f010004;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int transitionDrawable=0x7f01000f;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int transitionDrawableLength=0x7f010010;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int transitionTextColorDown=0x7f010012;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int transitionTextColorUp=0x7f010011;
        /**  Defines size relative to parent (must be in form: nn%p). 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int weight=0x7f01000c;
    }
    public static final class color {
        public static final int black=0x7f060006;
        public static final int dark_blue=0x7f060003;
        public static final int dark_orange=0x7f060004;
        public static final int light_blue=0x7f060005;
        public static final int light_gray=0x7f060002;
        public static final int light_green=0x7f060001;
        public static final int user_green=0x7f060000;
    }
    public static final class drawable {
        public static final int add=0x7f020000;
        public static final int blue_dowm=0x7f020001;
        public static final int blue_down_show1=0x7f020002;
        public static final int blue_down_show2=0x7f020003;
        public static final int blue_up=0x7f020004;
        public static final int green_distance=0x7f020005;
        public static final int green_kll=0x7f020006;
        public static final int green_run=0x7f020007;
        public static final int ic_launcher=0x7f020008;
        public static final int jian=0x7f020009;
        public static final int jknote=0x7f02000a;
        public static final int moshixianzeanjian=0x7f02000b;
        public static final int run_icon=0x7f02000c;
        public static final int selection_divider=0x7f02000d;
        public static final int shebeiweilianjie=0x7f02000e;
        public static final int shebeiyilianjie=0x7f02000f;
        public static final int sleep_icon=0x7f020010;
        public static final int user1=0x7f020011;
        public static final int user2=0x7f020012;
        public static final int user3=0x7f020013;
        public static final int user_change=0x7f020014;
        public static final int white_bg=0x7f020015;
        public static final int xinlv_icon=0x7f020016;
        public static final int xinlv_line=0x7f020017;
        public static final int xinlv_red_icon=0x7f020018;
        public static final int xinlv_yuan=0x7f020019;
    }
    public static final class id {
        public static final int add=0x7f05002e;
        public static final int base_lin=0x7f05003c;
        public static final int blue_dowm=0x7f050008;
        public static final int blue_up=0x7f05002c;
        public static final int bottom=0x7f050005;
        public static final int bottomToTop=0x7f050001;
        public static final int btn_save=0x7f05001f;
        public static final int chart_view=0x7f050023;
        public static final int conncet=0x7f050009;
        public static final int conncet_time=0x7f050011;
        public static final int datePicker1=0x7f050010;
        public static final int edit_height=0x7f05001d;
        public static final int edit_username=0x7f050018;
        public static final int edit_weight=0x7f05001e;
        public static final int edit_xinlvhigh=0x7f050024;
        public static final int edit_year=0x7f05001c;
        public static final int img_run=0x7f050028;
        public static final int img_sleep=0x7f050029;
        public static final int img_user1=0x7f050031;
        public static final int img_user2=0x7f050034;
        public static final int img_user3=0x7f050037;
        public static final int img_xinlv=0x7f05002a;
        public static final int left=0x7f050006;
        public static final int leftToRight=0x7f050002;
        public static final int lin_sleep_tu=0x7f050016;
        public static final int modle_lin=0x7f050027;
        public static final int ok=0x7f050025;
        public static final int radioGroup=0x7f050019;
        public static final int radioMan=0x7f05001a;
        public static final int radioWomen=0x7f05001b;
        public static final int rel_xinlv_line=0x7f050021;
        public static final int right=0x7f050007;
        public static final int rightToLeft=0x7f050000;
        public static final int save=0x7f050026;
        public static final int sleep_time=0x7f050017;
        public static final int sliding=0x7f05002b;
        public static final int text_allkilo=0x7f05000e;
        public static final int text_allkll=0x7f05000f;
        public static final int text_allrun=0x7f05000d;
        public static final int text_distance=0x7f05000c;
        public static final int text_hotnum=0x7f05000b;
        public static final int text_hour=0x7f050012;
        public static final int text_min=0x7f050013;
        public static final int text_qiansleep=0x7f050015;
        public static final int text_runnum=0x7f05000a;
        public static final int text_shensleep=0x7f050014;
        public static final int text_user1=0x7f050030;
        public static final int text_user2=0x7f050033;
        public static final int text_user3=0x7f050036;
        public static final int text_xinlv=0x7f050020;
        public static final int top=0x7f050004;
        public static final int topToBottom=0x7f050003;
        public static final int userLin=0x7f05002f;
        public static final int userchange1=0x7f050032;
        public static final int userchange2=0x7f050035;
        public static final int userchange3=0x7f050038;
        public static final int white_bg=0x7f05002d;
        public static final int windowsTvOne=0x7f050039;
        public static final int windowsTvThree=0x7f05003b;
        public static final int windowsTvTwo=0x7f05003a;
        public static final int xinlv_line=0x7f050022;
    }
    public static final class layout {
        public static final int act_run=0x7f030000;
        public static final int act_sleep=0x7f030001;
        public static final int act_userinfo=0x7f030002;
        public static final int act_xinlv=0x7f030003;
        public static final int activity_main=0x7f030004;
        public static final int activity_windows_loading_anim=0x7f030005;
        public static final int base_view=0x7f030006;
    }
    public static final class string {
        public static final int app_name=0x7f070000;
        public static final int hello_world=0x7f070001;
    }
    public static final class style {
        public static final int Theme_picker=0x7f080000;
        public static final int Widget_EditText_White=0x7f080001;
    }
    public static final class styleable {
        /** Attributes that can be used with a MultiDirectionSlidingDrawer.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MultiDirectionSlidingDrawer_allowSingleTap com.example.shouhuantest:allowSingleTap}</code></td><td></td></tr>
           <tr><td><code>{@link #MultiDirectionSlidingDrawer_animateOnClick com.example.shouhuantest:animateOnClick}</code></td><td></td></tr>
           <tr><td><code>{@link #MultiDirectionSlidingDrawer_bottomOffset com.example.shouhuantest:bottomOffset}</code></td><td></td></tr>
           <tr><td><code>{@link #MultiDirectionSlidingDrawer_content com.example.shouhuantest:content}</code></td><td></td></tr>
           <tr><td><code>{@link #MultiDirectionSlidingDrawer_direction com.example.shouhuantest:direction}</code></td><td></td></tr>
           <tr><td><code>{@link #MultiDirectionSlidingDrawer_handle com.example.shouhuantest:handle}</code></td><td></td></tr>
           <tr><td><code>{@link #MultiDirectionSlidingDrawer_topOffset com.example.shouhuantest:topOffset}</code></td><td></td></tr>
           </table>
           @see #MultiDirectionSlidingDrawer_allowSingleTap
           @see #MultiDirectionSlidingDrawer_animateOnClick
           @see #MultiDirectionSlidingDrawer_bottomOffset
           @see #MultiDirectionSlidingDrawer_content
           @see #MultiDirectionSlidingDrawer_direction
           @see #MultiDirectionSlidingDrawer_handle
           @see #MultiDirectionSlidingDrawer_topOffset
         */
        public static final int[] MultiDirectionSlidingDrawer = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006
        };
        /**
          <p>This symbol is the offset where the {@link com.example.shouhuantest.R.attr#allowSingleTap}
          attribute's value can be found in the {@link #MultiDirectionSlidingDrawer} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.shouhuantest:allowSingleTap
        */
        public static final int MultiDirectionSlidingDrawer_allowSingleTap = 5;
        /**
          <p>This symbol is the offset where the {@link com.example.shouhuantest.R.attr#animateOnClick}
          attribute's value can be found in the {@link #MultiDirectionSlidingDrawer} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.shouhuantest:animateOnClick
        */
        public static final int MultiDirectionSlidingDrawer_animateOnClick = 6;
        /**
          <p>This symbol is the offset where the {@link com.example.shouhuantest.R.attr#bottomOffset}
          attribute's value can be found in the {@link #MultiDirectionSlidingDrawer} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.shouhuantest:bottomOffset
        */
        public static final int MultiDirectionSlidingDrawer_bottomOffset = 3;
        /**
          <p>This symbol is the offset where the {@link com.example.shouhuantest.R.attr#content}
          attribute's value can be found in the {@link #MultiDirectionSlidingDrawer} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.shouhuantest:content
        */
        public static final int MultiDirectionSlidingDrawer_content = 2;
        /**
          <p>This symbol is the offset where the {@link com.example.shouhuantest.R.attr#direction}
          attribute's value can be found in the {@link #MultiDirectionSlidingDrawer} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>rightToLeft</code></td><td>0</td><td></td></tr>
<tr><td><code>bottomToTop</code></td><td>1</td><td></td></tr>
<tr><td><code>leftToRight</code></td><td>2</td><td></td></tr>
<tr><td><code>topToBottom</code></td><td>3</td><td></td></tr>
</table>
          @attr name com.example.shouhuantest:direction
        */
        public static final int MultiDirectionSlidingDrawer_direction = 0;
        /**
          <p>This symbol is the offset where the {@link com.example.shouhuantest.R.attr#handle}
          attribute's value can be found in the {@link #MultiDirectionSlidingDrawer} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.shouhuantest:handle
        */
        public static final int MultiDirectionSlidingDrawer_handle = 1;
        /**
          <p>This symbol is the offset where the {@link com.example.shouhuantest.R.attr#topOffset}
          attribute's value can be found in the {@link #MultiDirectionSlidingDrawer} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.shouhuantest:topOffset
        */
        public static final int MultiDirectionSlidingDrawer_topOffset = 4;
        /** Attributes that can be used with a Panel.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Panel_animationDuration com.example.shouhuantest:animationDuration}</code></td><td> Defines panel animation duration in ms.</td></tr>
           <tr><td><code>{@link #Panel_closedHandle com.example.shouhuantest:closedHandle}</code></td><td> Defines closed handle (drawable/color).</td></tr>
           <tr><td><code>{@link #Panel_content1 com.example.shouhuantest:content1}</code></td><td> Identifier for the child that represents the panel's content.</td></tr>
           <tr><td><code>{@link #Panel_handle1 com.example.shouhuantest:handle1}</code></td><td> Identifier for the child that represents the panel's handle.</td></tr>
           <tr><td><code>{@link #Panel_linearFlying com.example.shouhuantest:linearFlying}</code></td><td> Defines if flying gesture forces linear interpolator in animation.</td></tr>
           <tr><td><code>{@link #Panel_openedHandle com.example.shouhuantest:openedHandle}</code></td><td> Defines opened handle (drawable/color).</td></tr>
           <tr><td><code>{@link #Panel_position com.example.shouhuantest:position}</code></td><td> Defines panel position on the screen.</td></tr>
           <tr><td><code>{@link #Panel_weight com.example.shouhuantest:weight}</code></td><td> Defines size relative to parent (must be in form: nn%p).</td></tr>
           </table>
           @see #Panel_animationDuration
           @see #Panel_closedHandle
           @see #Panel_content1
           @see #Panel_handle1
           @see #Panel_linearFlying
           @see #Panel_openedHandle
           @see #Panel_position
           @see #Panel_weight
         */
        public static final int[] Panel = {
            0x7f010007, 0x7f010008, 0x7f010009, 0x7f01000a,
            0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e
        };
        /**
          <p>
          @attr description
           Defines panel animation duration in ms. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:animationDuration
        */
        public static final int Panel_animationDuration = 0;
        /**
          <p>
          @attr description
           Defines closed handle (drawable/color). 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:closedHandle
        */
        public static final int Panel_closedHandle = 7;
        /**
          <p>
          @attr description
           Identifier for the child that represents the panel's content. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:content1
        */
        public static final int Panel_content1 = 3;
        /**
          <p>
          @attr description
           Identifier for the child that represents the panel's handle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:handle1
        */
        public static final int Panel_handle1 = 2;
        /**
          <p>
          @attr description
           Defines if flying gesture forces linear interpolator in animation. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:linearFlying
        */
        public static final int Panel_linearFlying = 4;
        /**
          <p>
          @attr description
           Defines opened handle (drawable/color). 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:openedHandle
        */
        public static final int Panel_openedHandle = 6;
        /**
          <p>
          @attr description
           Defines panel position on the screen. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0</td><td> Panel placed at top of the screen. </td></tr>
<tr><td><code>bottom</code></td><td>1</td><td> Panel placed at bottom of the screen. </td></tr>
<tr><td><code>left</code></td><td>2</td><td> Panel placed at left of the screen. </td></tr>
<tr><td><code>right</code></td><td>3</td><td> Panel placed at right of the screen. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:position
        */
        public static final int Panel_position = 1;
        /**
          <p>
          @attr description
           Defines size relative to parent (must be in form: nn%p). 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:weight
        */
        public static final int Panel_weight = 5;
        /** Attributes that can be used with a SmoothButton.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SmoothButton_transitionDrawable com.example.shouhuantest:transitionDrawable}</code></td><td></td></tr>
           <tr><td><code>{@link #SmoothButton_transitionDrawableLength com.example.shouhuantest:transitionDrawableLength}</code></td><td></td></tr>
           <tr><td><code>{@link #SmoothButton_transitionTextColorDown com.example.shouhuantest:transitionTextColorDown}</code></td><td></td></tr>
           <tr><td><code>{@link #SmoothButton_transitionTextColorUp com.example.shouhuantest:transitionTextColorUp}</code></td><td></td></tr>
           </table>
           @see #SmoothButton_transitionDrawable
           @see #SmoothButton_transitionDrawableLength
           @see #SmoothButton_transitionTextColorDown
           @see #SmoothButton_transitionTextColorUp
         */
        public static final int[] SmoothButton = {
            0x7f01000f, 0x7f010010, 0x7f010011, 0x7f010012
        };
        /**
          <p>This symbol is the offset where the {@link com.example.shouhuantest.R.attr#transitionDrawable}
          attribute's value can be found in the {@link #SmoothButton} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.shouhuantest:transitionDrawable
        */
        public static final int SmoothButton_transitionDrawable = 0;
        /**
          <p>This symbol is the offset where the {@link com.example.shouhuantest.R.attr#transitionDrawableLength}
          attribute's value can be found in the {@link #SmoothButton} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.shouhuantest:transitionDrawableLength
        */
        public static final int SmoothButton_transitionDrawableLength = 1;
        /**
          <p>This symbol is the offset where the {@link com.example.shouhuantest.R.attr#transitionTextColorDown}
          attribute's value can be found in the {@link #SmoothButton} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.shouhuantest:transitionTextColorDown
        */
        public static final int SmoothButton_transitionTextColorDown = 3;
        /**
          <p>This symbol is the offset where the {@link com.example.shouhuantest.R.attr#transitionTextColorUp}
          attribute's value can be found in the {@link #SmoothButton} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.shouhuantest:transitionTextColorUp
        */
        public static final int SmoothButton_transitionTextColorUp = 2;
        /** Attributes that can be used with a Switcher.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Switcher_animationDuration com.example.shouhuantest:animationDuration}</code></td><td> Defines switcher animation duration in ms.</td></tr>
           <tr><td><code>{@link #Switcher_decreaseButton com.example.shouhuantest:decreaseButton}</code></td><td> Defines opened handle (drawable).</td></tr>
           <tr><td><code>{@link #Switcher_idleTimeout com.example.shouhuantest:idleTimeout}</code></td><td> Defines switcher idle timeout in ms.</td></tr>
           <tr><td><code>{@link #Switcher_increaseButton com.example.shouhuantest:increaseButton}</code></td><td> Defines opened handle (drawable).</td></tr>
           </table>
           @see #Switcher_animationDuration
           @see #Switcher_decreaseButton
           @see #Switcher_idleTimeout
           @see #Switcher_increaseButton
         */
        public static final int[] Switcher = {
            0x7f010007, 0x7f010013, 0x7f010014, 0x7f010015
        };
        /**
          <p>
          @attr description
           Defines switcher animation duration in ms. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:animationDuration
        */
        public static final int Switcher_animationDuration = 0;
        /**
          <p>
          @attr description
           Defines opened handle (drawable). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:decreaseButton
        */
        public static final int Switcher_decreaseButton = 2;
        /**
          <p>
          @attr description
           Defines switcher idle timeout in ms. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:idleTimeout
        */
        public static final int Switcher_idleTimeout = 1;
        /**
          <p>
          @attr description
           Defines opened handle (drawable). 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.shouhuantest:increaseButton
        */
        public static final int Switcher_increaseButton = 3;
    };
}
